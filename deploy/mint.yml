- name: Build frontend v4
  hosts: 127.0.0.1
  roles:
    - mint-dashboard-v4-build

- name: Setup mint repo
  hosts:
    - web
    - fpm
    - task
    - fort
  roles:
    - mint-v2.1

- name: Setup postgresql pali t-search
  hosts:
    - db
  tasks:
    - name: Upload pali.stop
      become: true
      ansible.builtin.copy:
        dest: "/usr/share/postgresql/{{ app_postgresql_version }}/tsearch_data/"
        src: "{{ playbook_dir }}/tsearch_data/pali.stop"
        owner: root
        group: root
        mode: "0444"
    - name: Upload pali.syn
      become: true
      ansible.builtin.copy:
        dest: "/usr/share/postgresql/{{ app_postgresql_version }}/tsearch_data/"
        src: "{{ playbook_dir }}/tsearch_data/pali.syn"
        owner: root
        group: root
        mode: "0444"
    - name: Restart postgresql server
      become: true
      ansible.builtin.systemd:
        state: restarted
        name: postgresql
# FIXME
# - name: Setup database
#   hosts:
#     - fort
#   tasks:
#     - name: Run all of outstanding migrations
#       ansible.builtin.command:
#         argv:
#           - "{{ app_deploy_target }}/docker/mint/run.sh"
#           - "{{ app_mint_image_name }}"
#           - db-migrate
#         chdir: "{{ app_deploy_target }}/"
#       register: mint_db_migrate_output
#       changed_when: mint_db_migrate_output.rc != 0

# - name: Build backend v8
#   hosts: fort
#   roles:
#     - mint-backend-v8-build

# - name: Build backend v8
#   hosts: fort
#   roles:
#     - mint-backend-v8-build

# - name: Setup backend servers
#   hosts:
#     - web
#     - fpm
#     - task
#   roles:
#     - mint-v2

# - name: Setup backend servers
#   hosts:
#     - web
#     - fpm
#     - task
#   roles:
#     - mint-v2

# - name: Setup nginx
#   hosts: web
#   roles:
#     - mint-nginx

# - name: Setup workers
#   hosts: tasks
#   roles:
#     - mint-workers
